{"version":3,"sources":["webpack:///./node_modules/@ecomplus/storefront-template/template/js/lib/fetch-info.js"],"names":["window","_info","fetchInfoPromises","forEach","endpoint","modInfo","promise","Promise","resolve","modules","url","then","result","data","Array","isArray","field","val","error","response","undefined","monthly_interest","max_number","value","emitter","emit","catch","err","console","finally","push","all"],"mappings":"yKAGAA,OAAOC,MAAQD,OAAOC,OAAS,GAC/B,IAAMC,EAAoB,GAEzB,CACC,gBACA,sBACAC,SAAQ,SAAAC,GACR,IAAMC,EAAU,GAChBL,OAAOC,MAAMG,GAAYC,EAEzB,IAAMC,EAAU,IAAIC,SAAQ,SAAAC,GAC1BC,kBAAQ,CAAEC,IAAK,IAAF,OAAMN,EAAN,WAEVO,MAAK,YAAc,IACVC,EADU,EAAXC,KACCD,OACJE,MAAMC,QAAQH,IAChBA,EAAOT,SAAQ,YAAyB,IAEhCa,EAAOC,EAFGC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,IAAKD,EAGH,OAAQd,GACN,IAAK,qBAGgB,iBADnBa,EAAME,EADNH,EAAQ,oCAE2CI,IAAnBf,EAAQW,IAAwBC,EAAMZ,EAAQW,MAC5EX,EAAQW,GAASC,GAEnB,MAEF,SAEEA,EAAME,EADNH,EAAQ,2BAEKX,EAAQW,IACnBC,EAAII,iBAAmBhB,EAAQW,GAAOK,kBACtCJ,EAAIK,WAAajB,EAAQW,GAAOM,cAChCjB,EAAQW,GAASC,IAGnBA,EAAME,EADNH,EAAQ,uBAEKX,EAAQW,IAAUC,EAAIM,MAAQlB,EAAQW,GAAOO,SACxDlB,EAAQW,GAASC,OAM7BO,IAAQC,KAAR,eAAqBrB,GAAYC,MAGlCqB,OAAM,SAAAC,GACLC,QAAQV,MAAMS,GACdH,IAAQC,KAAR,eAAqBrB,GAAYuB,MAGlCE,QAAQrB,MAGbN,EAAkB4B,KAAKxB,MAGzBC,QAAQwB,IAAI7B,GACTS,MAAK,kBAAMa,IAAQC,KAAK,OAAQzB,OAAOC","file":"d994a59ff3d0032de6c7.js","sourcesContent":["import emitter from './emitter'\nimport { modules } from '@ecomplus/client'\n\nwindow._info = window._info || {}\nconst fetchInfoPromises = []\n\n;[\n  'list_payments',\n  'calculate_shipping'\n].forEach(endpoint => {\n  const modInfo = {}\n  window._info[endpoint] = modInfo\n\n  const promise = new Promise(resolve => {\n    modules({ url: `/${endpoint}.json` })\n\n      .then(({ data }) => {\n        const { result } = data\n        if (Array.isArray(result)) {\n          result.forEach(({ error, response }) => {\n            if (!error) {\n              let field, val\n\n              switch (endpoint) {\n                case 'calculate_shipping':\n                  field = 'free_shipping_from_value'\n                  val = response[field]\n                  if (typeof val === 'number' && (modInfo[field] === undefined || val < modInfo[field])) {\n                    modInfo[field] = val\n                  }\n                  break\n\n                default:\n                  field = 'installments_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] ||\n                    val.monthly_interest < modInfo[field].monthly_interest ||\n                    val.max_number > modInfo[field].max_number)) {\n                    modInfo[field] = val\n                  }\n                  field = 'discount_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] || val.value > modInfo[field].value)) {\n                    modInfo[field] = val\n                  }\n              }\n            }\n          })\n        }\n        emitter.emit(`info:${endpoint}`, modInfo)\n      })\n\n      .catch(err => {\n        console.error(err)\n        emitter.emit(`info:${endpoint}`, err)\n      })\n\n      .finally(resolve)\n  })\n\n  fetchInfoPromises.push(promise)\n})\n\nPromise.all(fetchInfoPromises)\n  .then(() => emitter.emit('info', window._info))\n"],"sourceRoot":""}